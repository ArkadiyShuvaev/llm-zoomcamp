from typing import List, Tuple
if 'transformer' not in globals():
    from mage_ai.data_preparation.decorators import transformer
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


@transformer
def subword_tokenizer(data: DataFrame, *args, **kwargs) -> DataFrame:
    """
    Tokenize text into subword units using a specified subword model.
    """
    # document_id, document_content, chunk = document_data
    # model_path = kwargs['model_path']
    # max_subwords = kwargs.get('max_subwords', 5)
    # handle_oov = kwargs.get('handle_oov', "split")

    # # Assuming a hypothetical library `subword_tokenizer` is used here.
    # # You would replace this with actual subword tokenization logic.
    # from subword_tokenizer import SubwordTokenizer

    # tokenizer = SubwordTokenizer(model_path=model_path, max_subwords=max_subwords, handle_oov=handle_oov)
    # tokens = tokenizer.encode(chunk)

    # return document_id, document_content, chunk, tokens
    return data


@test
def test_output(output, *args) -> None:
    """
    Template code for testing the output of the block.
    """
    assert output is not None, 'The output is undefined'